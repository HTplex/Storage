//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2011.08.04 at 02:05:46 PM CEST
//


package playground.gregor.grips.jaxb.inspire.roadtransportnetwork;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import playground.gregor.grips.jaxb.inspire.commontransportelements.TransportPropertyType;


/**
 * <p>Java class for FunctionalRoadClassType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FunctionalRoadClassType">
 *   &lt;complexContent>
 *     &lt;extension base="{urn:x-inspire:specification:gmlas:CommonTransportElements:3.0}TransportPropertyType">
 *       &lt;sequence>
 *         &lt;element name="functionalClass" type="{urn:x-inspire:specification:gmlas:RoadTransportNetwork:3.0}FunctionalRoadClassValueType"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FunctionalRoadClassType", propOrder = {
		"functionalClass"
})
public class FunctionalRoadClassType
extends TransportPropertyType
{

	@XmlElement(required = true)
	protected FunctionalRoadClassValueType functionalClass;

	/**
	 * Gets the value of the functionalClass property.
	 * 
	 * @return
	 *     possible object is
	 *     {@link FunctionalRoadClassValueType }
	 * 
	 */
	public FunctionalRoadClassValueType getFunctionalClass() {
		return this.functionalClass;
	}

	/**
	 * Sets the value of the functionalClass property.
	 * 
	 * @param value
	 *     allowed object is
	 *     {@link FunctionalRoadClassValueType }
	 * 
	 */
	public void setFunctionalClass(FunctionalRoadClassValueType value) {
		this.functionalClass = value;
	}

	public boolean isSetFunctionalClass() {
		return (this.functionalClass!= null);
	}

	@Override
	public Object createNewInstance() {
		// TODO Auto-generated method stub
		return null;
	}

}
